INCLUDE ZTREINAMENTO_ALV016_TOP.
INCLUDE ZTREINAMENTO_ALV016_SRC.

OSTRUCT ?= CL_ABAP_TYPEDESCR=>DESCRIBE_BY_NAME( P_TABELA ).

"Metodo onde tem varios tipos, o tipo "CREATE" faz com que busca o tipo da tabela que preciso em tempo de execução
CL_ABAP_TABLEDESCR=>CREATE(
  EXPORTING
    P_LINE_TYPE          =     OSTRUCT
  RECEIVING
    P_RESULT             = DATA(T_TABELA_TP)
).

CREATE DATA GT_TABELA TYPE HANDLE T_TABELA_TP.
ASSIGN GT_TABELA->* TO <FS_GT_TABELA>.

SELECT *
   FROM (P_TABELA)
  INTO TABLE <FS_GT_TABELA>.

*** ESTRUTURA ALV SUPER SIMPLES
DATA: GR_TABLE    TYPE REF TO CL_SALV_TABLE.
DATA: GR_FUNCT    TYPE REF TO CL_SALV_FUNCTIONS.
DATA: GR_COLUMNS  TYPE REF TO CL_SALV_COLUMNS_TABLE.
DATA: GR_COLUMN   TYPE REF TO CL_SALV_COLUMN.
DATA: GR_LAYOUT   TYPE REF TO CL_SALV_LAYOUT.

DATA: NOT_FOUND TYPE REF TO CX_SALV_NOT_FOUND.

DATA: LS_KEY TYPE SALV_S_LAYOUT_KEY.

"Cria o ALV
TRY.
    CALL METHOD CL_SALV_TABLE=>FACTORY
      IMPORTING
        R_SALV_TABLE = GR_TABLE
      CHANGING
        T_TABLE      = <FS_GT_TABELA>.
  CATCH CX_SALV_MSG.
ENDTRY.

"Obtêm as colunas do ALV
GR_COLUMNS = GR_TABLE->GET_COLUMNS( ).

TRY.
    GR_COLUMN = GR_COLUMNS->GET_COLUMN( 'MANDT' ).
    GR_COLUMN->SET_VISIBLE( VALUE = IF_SALV_C_BOOL_SAP=>FALSE ).
  CATCH CX_SALV_NOT_FOUND INTO NOT_FOUND.
    "error handling
ENDTRY.

"Habilita salvar layouts
GR_LAYOUT = GR_TABLE->GET_LAYOUT( ).
LS_KEY-REPORT = SY-REPID.
GR_LAYOUT->SET_KEY( LS_KEY ).
GR_LAYOUT->SET_SAVE_RESTRICTION( IF_SALV_C_LAYOUT=>RESTRICT_NONE ).

"Defini os botões do ALV
GR_FUNCT = GR_TABLE->GET_FUNCTIONS( ).
GR_FUNCT->SET_ALL( ABAP_TRUE ).

"Exibi o ALV
GR_TABLE->DISPLAY( ).
